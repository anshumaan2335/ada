
#include <stdio.h>

int n;
void printMatrix(int matrix[][n]);
void floydWarshall(int graph[][n]) {
  int matrix[n][n], i, j, k;

  for (i = 0; i < n; i++)
    for (j = 0; j < n; j++)
      matrix[i][j] = graph[i][j];
  for (k = 0; k < n; k++) {
    for (i = 0; i < n; i++) {
      for (j = 0; j < n; j++) {
        if (matrix[i][k] + matrix[k][j] < matrix[i][j])
          matrix[i][j] = matrix[i][k] + matrix[k][j];
      }
    }
  }
  printMatrix(matrix);
}

void printMatrix(int matrix[][n]) {
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (matrix[i][j] == 999
      )
        printf("%s", "999");
      else
        printf("%d", matrix[i][j]);
    }
    printf("\n");
  }
}

int main() {printf("enter the no. of vertices");
    scanf("%d",&n);
    int graph[n][n];
 int i ,j;
             for(i=0;i<n;i++)
             {
                 for(j=0;j<n;j++)
                 {int x;
                 printf("enter the edge length of %d to %d, enter 999 if edge is not there", i+1,j+1);
                     scanf("%d",&x);
                     graph[i][j]=x;
                 }
             }
  floydWarshall(graph);
}
